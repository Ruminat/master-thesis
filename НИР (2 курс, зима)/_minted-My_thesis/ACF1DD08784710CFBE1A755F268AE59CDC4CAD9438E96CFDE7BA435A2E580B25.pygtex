\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{k}{def} \PYG{n+nf}{scaledDotProductAttention}\PYG{p}{(}
  \PYG{n}{query}\PYG{p}{:} \PYG{n}{Tensor}\PYG{p}{,}
  \PYG{n}{key}\PYG{p}{:} \PYG{n}{Tensor}\PYG{p}{,}
  \PYG{n}{value}\PYG{p}{:} \PYG{n}{Tensor}\PYG{p}{,}
  \PYG{n}{mask}\PYG{p}{:} \PYG{n}{Optional}\PYG{p}{[}\PYG{n}{Tensor}\PYG{p}{]} \PYG{o}{=} \PYG{k+kc}{None}
\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n}{Tensor}\PYG{p}{:}
  \PYG{c+c1}{\PYGZsh{} Считаем scale, на который будем делить}
  \PYG{n}{scale} \PYG{o}{=} \PYG{n}{query}\PYG{o}{.}\PYG{n}{size}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{**} \PYG{l+m+mf}{0.5}
  \PYG{c+c1}{\PYGZsh{} Перемножаем матрицы query и key, делим их на scale}
  \PYG{n}{temp} \PYG{o}{=} \PYG{n}{query}\PYG{o}{.}\PYG{n}{bmm}\PYG{p}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n}{transpose}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{))} \PYG{o}{/} \PYG{n}{scale}

  \PYG{c+c1}{\PYGZsh{} Применяем маску, если она есть}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{mask} \PYG{o+ow}{is} \PYG{o+ow}{not} \PYG{k+kc}{None}\PYG{p}{):}
    \PYG{n}{temp} \PYG{o}{+=} \PYG{n}{mask}

  \PYG{c+c1}{\PYGZsh{} Применяем softmax к измерению embedding\PYGZsq{}ов}
  \PYG{n}{softmax} \PYG{o}{=} \PYG{n}{f}\PYG{o}{.}\PYG{n}{softmax}\PYG{p}{(}\PYG{n}{temp}\PYG{p}{,} \PYG{n}{dim}\PYG{o}{=\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)}
  \PYG{c+c1}{\PYGZsh{} Перемножаем softmax с матрицей value}
  \PYG{k}{return} \PYG{n}{softmax}\PYG{o}{.}\PYG{n}{bmm}\PYG{p}{(}\PYG{n}{value}\PYG{p}{)}
\end{Verbatim}
